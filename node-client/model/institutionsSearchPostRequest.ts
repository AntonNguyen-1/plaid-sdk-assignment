/**
 * Plaid SDK Assignment
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { InstitutionsSearchPostRequestOptions } from './institutionsSearchPostRequestOptions';

export class InstitutionsSearchPostRequest {
    /**
    * The search query. Institutions with names matching the query are returned
    */
    'query': string;
    /**
    * Specify which country or countries to include institutions from
    */
    'countryCodes': Array<InstitutionsSearchPostRequest.CountryCodesEnum>;
    /**
    * Filter the Institutions based on whether they support all products listed in products
    */
    'products'?: Array<InstitutionsSearchPostRequest.ProductsEnum>;
    'options'?: InstitutionsSearchPostRequestOptions;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "query",
            "baseName": "query",
            "type": "string"
        },
        {
            "name": "countryCodes",
            "baseName": "country_codes",
            "type": "Array<InstitutionsSearchPostRequest.CountryCodesEnum>"
        },
        {
            "name": "products",
            "baseName": "products",
            "type": "Array<InstitutionsSearchPostRequest.ProductsEnum>"
        },
        {
            "name": "options",
            "baseName": "options",
            "type": "InstitutionsSearchPostRequestOptions"
        }    ];

    static getAttributeTypeMap() {
        return InstitutionsSearchPostRequest.attributeTypeMap;
    }
}

export namespace InstitutionsSearchPostRequest {
    export enum CountryCodesEnum {
        Us = <any> 'US',
        Gb = <any> 'GB',
        Es = <any> 'ES',
        Nl = <any> 'NL',
        Fr = <any> 'FR',
        Ie = <any> 'IE',
        Ca = <any> 'CA',
        De = <any> 'DE',
        It = <any> 'IT',
        Pl = <any> 'PL',
        Dk = <any> 'DK',
        False = <any> 'false',
        Se = <any> 'SE',
        Ee = <any> 'EE',
        Lt = <any> 'LT',
        Lv = <any> 'LV',
        Pt = <any> 'PT',
        Be = <any> 'BE'
    }
    export enum ProductsEnum {
        Assets = <any> 'assets',
        Auth = <any> 'auth',
        Balance = <any> 'balance',
        Employment = <any> 'employment',
        Identity = <any> 'identity',
        IncomeVerification = <any> 'income_verification',
        Investments = <any> 'investments',
        Liabilities = <any> 'liabilities',
        IdentityVerification = <any> 'identity_verification',
        PaymentInitiation = <any> 'payment_initiation',
        StandingOrders = <any> 'standing_orders',
        Transactions = <any> 'transactions',
        Transfer = <any> 'transfer'
    }
}
